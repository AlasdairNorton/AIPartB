DONE:
- Imported code from part A
- Altered board representation to use integers (-1 invalid, 0 empty, 1 white, 2 black)
	rather than characters, according to piece interface.
	
Player class implementation in TestPlayer1.
- Implemented OpponentMove, Init, Printboard, getWinner in testPlayer1.java
- Currently makeMove prompts a user for input, for the sake of testing the
 other functions. This function is where the decision making logic should go.
- I'd like to keep the user input player for general testing purposes, so when
implementing new decision making logic, put it in a new copy of the class
 (TestPlayer2, etc.)
 
-To run the program, Referee.java takes 3 arguments; the size of the board and
the class of each player.
I've been testing using
6
aiproj.ourCode.testPlayer1
aiproj.ourCode.testPlayer1


Check coordinate system for TestPlayer2. Should use board[ROW][COLUMN] consistently.
Also ensure that tile referencing is correct in both taking opponent moves and sending own moves- 
Oppenent moves should be transformed with +1/+1 (e.g. a move to (1,1) in the referee coord system is (2,2) in our board's)
When the agent makes a move, the coordinates should be transformed -1,-1 (again, trying to place at (2,2) in our board
coords, is (1,1) in the referee's)
 

 
